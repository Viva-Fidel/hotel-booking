# Generated by Django 4.2 on 2023-05-06 14:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import hotels.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BedType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beds', models.PositiveIntegerField(help_text='Number of beds in the room')),
                ('bed_types', models.CharField(choices=[('queen', 'Queen bed'), ('sofa', 'Sofa bed'), ('king', 'King bed'), ('twin', 'Twin bed'), ('full', 'Full bed')], help_text='Types of beds in the room (comma-separated)', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Hotels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=255, verbose_name='Hotel name')),
                ('hotel_city', models.CharField(max_length=255, verbose_name='Hotel city')),
                ('hotel_street', models.CharField(max_length=255, verbose_name='Hotel street')),
                ('hotel_zip_code', models.CharField(max_length=10, verbose_name='Hotel Zip code')),
                ('hotel_description', models.TextField(verbose_name='Hotel overview')),
                ('hotel_cover_photo', models.ImageField(upload_to=hotels.models.cover_hotel_photo_path, verbose_name='Hotel cover photo')),
                ('hotel_popularity', models.PositiveIntegerField(default=0)),
                ('hotel_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('is_published', models.BooleanField(default=True, verbose_name='Is published')),
                ('hotel_county', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.counties', verbose_name='Hotel county')),
            ],
            options={
                'verbose_name': 'Hotels',
                'verbose_name_plural': 'Hotels',
                'ordering': ['hotel_name', 'time_create'],
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the room type', max_length=50)),
                ('description', models.TextField(default=None, help_text='Description of the room type')),
                ('price_per_night', models.DecimalField(decimal_places=2, default=None, help_text='Price per night of the room type', max_digits=8)),
                ('photo_1', models.ImageField(blank=True, null=True, upload_to='room_types/')),
                ('photo_2', models.ImageField(blank=True, null=True, upload_to='room_types/')),
                ('photo_3', models.ImageField(blank=True, null=True, upload_to='room_types/')),
                ('bed_types', models.ManyToManyField(help_text='Types and quantities of beds in the room', to='hotels.bedtype')),
                ('hotels', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='hotel_rooms', to='hotels.hotels')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(default=None, help_text='Room number', max_length=50)),
                ('notes', models.TextField(default=None, help_text='Notes for the room')),
                ('available', models.BooleanField(default=True, help_text='Is the room currently available?')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.roomtype')),
            ],
            options={
                'unique_together': {('room_type', 'room_number')},
            },
        ),
        migrations.CreateModel(
            name='HotelsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=hotels.models.hotel_general_photos_path, verbose_name='Hotel general photo')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='general_images', to='hotels.hotels')),
            ],
            options={
                'verbose_name_plural': 'Hotels general photos',
            },
        ),
        migrations.CreateModel(
            name='HotelFacilities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_has_free_wifi', models.BooleanField(default=False, verbose_name='Free wifi')),
                ('hotel_has_air_conditioning', models.BooleanField(default=False, verbose_name='Air Conditioning')),
                ('hotel_has_parking_available', models.BooleanField(default=False, verbose_name='Parking available')),
                ('hotel_has_business_services', models.BooleanField(default=False, verbose_name='Business Services')),
                ('hotel_has_swimming_pool', models.BooleanField(default=False, verbose_name='Swimming pool')),
                ('hotel_has_top_rated_in_area', models.BooleanField(default=False, verbose_name='Top rated in area')),
                ('hotel_has_flat_screen_tv', models.BooleanField(default=False, verbose_name='Flat-screen TV')),
                ('hotel_has_24_hour_front_desk', models.BooleanField(default=False, verbose_name='24-hour front desk')),
                ('hotel_has_non_smoking_rooms', models.BooleanField(default=False, verbose_name='Non-smoking rooms')),
                ('hotel_has_fitness_center', models.BooleanField(default=False, verbose_name='Fitness center')),
                ('hotel_has_room_service', models.BooleanField(default=False, verbose_name='Room service')),
                ('hotel_has_restaurant', models.BooleanField(default=False, verbose_name='Restaurant')),
                ('hotel_is_pet_friendly', models.BooleanField(default=False, verbose_name='Pet friendly')),
                ('hotel_has_facilities_for_disabled_guests', models.BooleanField(default=False, verbose_name='Facilities for disabled guests')),
                ('hotel_has_family_rooms', models.BooleanField(default=False, verbose_name='Family rooms')),
                ('hotel_has_spa', models.BooleanField(default=False, verbose_name='Spa')),
                ('hotel_has_airport_shuttle', models.BooleanField(default=False, verbose_name='Airport shuttle')),
                ('hotel_has_electric_vehicle_charging_station', models.BooleanField(default=False, verbose_name='Electric vehicle charging station')),
                ('hotel_has_free_cancellation', models.BooleanField(default=False, verbose_name='Free cancellation')),
                ('hotel_has_beach_front', models.BooleanField(default=False, verbose_name='Beach front')),
                ('hotel_has_jacuzzi', models.BooleanField(default=False, verbose_name='Hot tub/jacuzzi')),
                ('hotel_has_without_credit_card', models.BooleanField(default=False, verbose_name='Book without credit card')),
                ('hotel_has_no_prepayment', models.BooleanField(default=False, verbose_name='No prepayment')),
                ('facilities', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotel_facilities', to='hotels.hotels')),
            ],
        ),
        migrations.CreateModel(
            name='HotelActivities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_has_fishing', models.BooleanField(default=False, verbose_name='Fishing')),
                ('hotel_has_hiking', models.BooleanField(default=False, verbose_name='Hiking')),
                ('hotel_has_beach', models.BooleanField(default=False, verbose_name='Beach')),
                ('hotel_has_cycling', models.BooleanField(default=False, verbose_name='Cycling')),
                ('hotel_has_sauna', models.BooleanField(default=False, verbose_name='Sauna')),
                ('hotel_has_night_lights', models.BooleanField(default=False, verbose_name='Night lights')),
                ('hotel_has_tennis', models.BooleanField(default=False, verbose_name='Tennis')),
                ('hotel_has_yoga', models.BooleanField(default=False, verbose_name='Yoga')),
                ('hotel_has_scuba_diving', models.BooleanField(default=False, verbose_name='Scuba diving')),
                ('hotel_has_rafting', models.BooleanField(default=False, verbose_name='Rafting')),
                ('hotel_has_guided_nature_walks', models.BooleanField(default=False, verbose_name='Guided nature walks')),
                ('hotel_has_skiing', models.BooleanField(default=False, verbose_name='Skiing or snowboarding')),
                ('hotel_has_golfing', models.BooleanField(default=False, verbose_name='Golfing')),
                ('hotel_has_surfing', models.BooleanField(default=False, verbose_name='Surfing')),
                ('activities', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotel_activities', to='hotels.hotels')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('guest_count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='hotels.room')),
            ],
            options={
                'unique_together': {('room', 'check_in_date', 'check_out_date')},
            },
        ),
    ]
